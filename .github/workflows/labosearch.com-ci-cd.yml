# This workflow is triggered on push or pull request events to the main branch.
on:
  push:
    branches:
      # - main  # Only runs on push events to the main branch
  pull_request:
    branches:
      - main  # Only runs on pull requests to the main branch

jobs:
  # Job 1: Checkout code
  checkout:
    runs-on: ubuntu-latest  # Linux provides a consistent environment for CI/CD jobs

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Checks out the repository code

  # Job 2: Set up PHP environment
  setup_php:
    runs-on: ubuntu-latest
    needs: checkout  # This job depends on the successful completion of the checkout job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Ensures the code is checked out for this job
        
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'  # Sets PHP version to 7.4, ensuring compatibility with CodeIgniter requirements

  # Job 3: Build, push Docker image to Docker Hub, and deploy to AWS EC2
  deploy_to_aws:
    runs-on: ubuntu-latest
    needs: setup_php  # This job depends on the setup_php job

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Ensures access to the latest code for building the Docker image

      - name: Set up environment variables
        run: |
          echo "REPO_NAME=labosearch_demo" >> $GITHUB_ENV
          echo "IMAGE_TAG=latest" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build . --tag quatib9/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u quatib9 --password-stdin # Login securely to Docker Hub

      - name: Push Docker image to Docker Hub
        run: docker push quatib9/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY_SECRET }}
          script: |
            sudo systemctl start docker
            sudo docker pull quatib9/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}
            sudo docker stop my-container || true  # Stop existing container if it exists
            sudo docker rm my-container || true    # Remove existing container if it exists
            sudo docker run -d --name my-container -p 80:80 quatib9/${{ env.REPO_NAME }}:${{ env.IMAGE_TAG }}
            
      - name: Notify deployment success
        run: echo "Deployment to AWS EC2 successful."
